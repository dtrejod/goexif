# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: go.mod

    - name: Verify dependencies
      run: go mod verify

    - name: Build Validation
      run: go build -v ./... -ldflags="-X 'version.Version=${{ github.ref_name }}'" -o bin/goexif

    - name: Print Version
      run: ./bin/goexif version

    - name: Vet
      run: go vet $(go list ./... | grep -v /vendor/)

    - name: Install staticcheck
      run: go install honnef.co/go/tools/cmd/staticcheck@latest

    - name: Run staticcheck
      run: staticcheck $(go list ./... | grep -v /vendor/)

    - name: Install golint
      run: go install golang.org/x/lint/golint@latest

    - name: Run golint
      run: golint $(go list ./... | grep -v /vendor/)

    - name: Test
      run: go test -v ./...

  release:
    runs-on: ubuntu-latest
    needs:
      - test
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: go.mod

    - name: Build Darwin amd64
      run: OS=darwin GOARCH=amd64 go build -v ./...  -o bin/goexif-amd64-darwin -ldflags="-X 'version.Version=${{ github.ref_name }}'"

    - name: Build Darwin arm64
      run: OS=darwin GOARCH=arm64 go build -v ./...  -o bin/goexif-arm64-darwin -ldflags="-X 'version.Version=${{ github.ref_name }}'"

    - name: Build Linux amd64
      run: OS=linux GOARCH=amd64 go build -v ./...  -o bin/goexif-amd64-linux -ldflags="-X 'version.Version=${{ github.ref_name }}'"

    - name: Build Linux arm64
      run: OS=linux GOARCH=arm64 go build -v ./...  -o bin/goexif-arm64-linux -ldflags="-X 'version.Version=${{ github.ref_name }}'"

    - name: Build Windows amd64
      run: OS=windows GOARCH=amd64 go build -v ./...  -o bin/goexif-amd64-windows.exe -ldflags="-X 'version.Version=${{ github.ref_name }}'"

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          bin/goexif-amd64-darwin
          bin/goexif-arm64-darwin
          bin/goexif-amd64-linux
          bin/goexif-arm64-linux
          bin/goexif-amd64-windows.exe
